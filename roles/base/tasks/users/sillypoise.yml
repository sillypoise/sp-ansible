- name: users | sillypoise | create group
  tags:
    - bootstrap
    - groups
    - sillypoise
    - users
  group:
    name: sillypoise
    state: present

- name: users | ansible | create group
  tags:
    - bootstrap
    - groups
    - ansible
    - users
  group:
    name: ansible
    state: present

- name: users | sillypoise | install zsh
  tags:
    - bootstrap
    - packages
  ansible.builtin.pacman:
    name: zsh
    state: present

- name: users | sillypoise | create user without password
  tags:
    - bootstrap
    - sillypoise
    - sudo
    - users
  user:
    name: sillypoise
    group: sillypoise
    groups:
      - ansible
      - "{{ sudo_group }}"
    state: present
    comment: "sillypoise"
    shell: /bin/zsh
    password: '!'  # No password set

- name: users | sillypoise | create .ssh directory
  tags:
    - bootstrap
    - ssh
    - users
    - dotfiles
    - configure
  ansible.builtin.file:
    path: /home/sillypoise/.ssh
    state: directory
    owner: sillypoise
    group: sillypoise
    mode: '0700'

- name: users | sillypoise | add sudoers file
  tags:
    - bootstrap
    - sudo
    - users
    - configure
  ansible.builtin.copy:
    src: users/sudoers_sillypoise
    dest: /etc/sudoers.d/sillypoise
    owner: root
    group: root
    mode: '0440'

- name: users | sillypoise | add public key
  tags:
    - bootstrap
    - dotfiles
    - sillypoise
    - ssh
    - ssh-keys
    - users
  authorized_key:
    user: sillypoise
    key: "{{ item }}"
  with_file:
    - users/sillypoise/ssh/sp_work_ed25519.pub

- name: users | sillypoise | import ansible password op tpl file
  tags:
    - secrets
    - op
    - template
  copy:
    src: users/vault_key_passwd
    dest: /home/sillypoise/.vault_key_passwd.tpl
    owner: sillypoise
    group: sillypoise
    mode: 0600

## TODO: Fix error handling here
- name: users | sillypoise | verify op CLI authentication
  ansible.builtin.command: op whoami
  register: op_whoami
  # no_log: true
  tags:
    - secrets
    - op

- name: users | sillypoise | fail if op CLI is not authenticated
  ansible.builtin.fail:
    msg: "op CLI is not authenticated. Please ensure OP_SERVICE_ACCOUNT_TOKEN is set correctly."
  when:
    - op_whoami.rc != 0
  tags:
    - secrets
    - op

- block:
    - name: users | sillypoise | retrieve password from 1Password
      ansible.builtin.command: op read "op://sp-dev/user/password"
      register: sillypoise_password
      no_log: true
      tags:
        - users
        - sillypoise
        - secrets
        - op

    - name: users | sillypoise | set user password
      ansible.builtin.user:
        name: sillypoise
        password: "{{ sillypoise_password.stdout | password_hash('sha512') }}"
        update_password: always
      tags:
        - users
        - sillypoise
        - sudo
      no_log: true
  rescue:
    - name: users | sillypoise | handle password retrieval failure
      ansible.builtin.fail:
        msg: "Failed to retrieve password from 1Password. Please check your OP_SERVICE_ACCOUNT_TOKEN environment variable and secret path."
      tags:
        - sillypoise
        - error
        - secrets
        - op

- name: users | sillypoise | op inject ansible vault passwd
  ansible.builtin.shell: op inject -i /home/sillypoise/.vault_key_passwd.tpl -o /home/sillypoise/.vault_key_passwd -f
  register: inject_result
  no_log: true
  tags:
    - secrets
    - op

- name: users | sillypoise | set permissions on injected vault_key_passwd
  ansible.builtin.file:
    path: /home/sillypoise/.vault_key_passwd
    owner: sillypoise
    group: sillypoise
    mode: 0600
  when:
    - inject_result.rc == 0
  tags:
    - secrets
    - op

- name: users | sillypoise | remove template file after injection
  ansible.builtin.file:
    path: /home/sillypoise/.vault_key_passwd.tpl
    state: absent
  tags:
    - secrets
    - op
    - cleanup
  when:
    - inject_result.rc == 0

- name: users | sillypoise | create config directories
  tags:
    - dotfiles
    - sillypoise
    - users
    - neovim
    - zsh
  file:
    path: /home/sillypoise/{{ item.dir }}
    state: directory
    owner: sillypoise
    group: sillypoise
    mode: 0700
  with_items:
    - { dir: '.config' }
    - { dir: '.zsh' }

- name: users | sillypoise | copy dotfiles
  tags:
    - dotfiles
    - users
    - sillypoise
    - zsh
  copy:
    src: users/sillypoise/{{ item.src }}
    dest: /home/sillypoise/{{ item.dest }}
    owner: sillypoise
    group: sillypoise
    mode: '0600'
  with_items:
    - { src: 'git/gitconfig', dest: '.gitconfig' }
    - { src: 'zsh/zshrc', dest: '.zshrc' }

- name: users | sillypoise | copy individual zsh config files
  tags:
    - dotfiles
    - sillypoise
    - users
    - zsh
  copy:
    src: users/sillypoise/zsh/{{ item.src }}
    dest: /home/sillypoise/.zsh/{{ item.src }}
    owner: sillypoise
    group: sillypoise
    mode: '0600'
  with_items:
    - { src: 'aliases.zsh' }
    - { src: 'bindkey.zsh' }
    - { src: 'completion.zsh' }
    - { src: 'exports.zsh' }
    - { src: 'functions.zsh' }
    - { src: 'history.zsh' }
    - { src: 'path.zsh' }
    - { src: 'setopt.zsh' }
    - { src: 'theming.zsh' }
    - { src: 'tooling.zsh' }
